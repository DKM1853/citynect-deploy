{"version":3,"sources":["components/dashboard/TopCards.js","views/Starter.js"],"names":["TopCards","props","_jsx","Card","children","CardBody","_jsxs","className","concat","bg","icon","earning","subtitle","data","name","value","COLORS","Starter","_useState","useState","_useState2","_slicedToArray","setCourses","_useState3","_useState4","setRequest","_useState5","_useState6","setInternships","_useState7","_useState8","setEvents","_useState9","_useState10","setUsers","_useState11","_useState12","loginData","setLoginData","_useState13","_useState14","signUpData","setSignUpData","_useState15","_useState16","propertyData","setPropertyData","_useState17","_useState18","totalPropertyData","setTotalPropertyData","_useState19","_useState20","revenueData","setRevenueData","_useState21","_useState22","revenuePlan","setRevenuePlan","loginStartDate","loginEndDate","propertyStartDate","propertyEndDate","revenueStartDate","revenueEndDate","loginHandle","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","_data","arr","i","arr2","_i","wrap","_context","prev","next","axios","get","sent","loginDate","length","push","date","users","loginCount","signUpDate","signUpCount","t0","console","log","stop","apply","arguments","propertyHandle","_ref2","_callee2","res3","data3","propCntArr","_context2","propertyByDate","totalLiveProperties","totalLivePGs","totalLiveSharingFlats","totalLivePrivateFlats","revenueHandle","_ref3","_callee3","res4","data4","revenuePlanData","_context3","revenueByDate","revenueByPlan","Basic","King","Pro","_useState23","_useState24","userData","setUserData","useEffect","fetchData","_ref4","_callee4","_data2","_i2","res2","data2","_context4","fetch","then","json","catch","err","Row","Col","sm","lg","title","bannedUserCount","pendingCallbackCount","reportedPropertiesCount","rentedOutPropertiesCount","unverifiedPropertiesCount","LineChart","width","height","XAxis","dataKey","YAxis","CartesianGrid","stroke","strokeDasharray","Tooltip","Legend","Line","type","activeDot","r","DatePicker","selected","onChange","year","getFullYear","month","String","getMonth","padStart","day","getDate","dateFormat","isClearable","showYearDropdown","scrollableYearDropdown","onClick","BarChart","Bar","fill","PieChart","Pie","isAnimationActive","cx","cy","outerRadius","label","map","entry","index","Cell"],"mappings":"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","file":"static/js/5.421bc273.chunk.js","sourcesContent":["import { Card, CardBody } from \"reactstrap\";\n\nconst TopCards = (props) => {\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex\">\n          <div className={`circle-box lg-box d-inline-block ${props.bg}`}>\n            <i className={props.icon}></i>\n          </div>\n          <div className=\"ms-3\">\n            <h3 className=\"mb-0 font-weight-bold\">{props.earning}</h3>\n            <small className=\"text-muted\">{props.subtitle}</small>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default TopCards;\n","import { Col, Row } from \"reactstrap\";\nimport SalesChart from \"../components/dashboard/SalesChart\";\nimport Feeds from \"../components/dashboard/Feeds\";\nimport ProjectTables from \"../components/dashboard/ProjectTable\";\nimport TopCards from \"../components/dashboard/TopCards\";\nimport Blog from \"../components/dashboard/Blog\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Legend, BarChart, Bar, PieChart, Pie, Cell, Tooltip } from 'recharts';\nimport axios from \"../api/axios\";\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst data = [\n  { name: 'Category A', value: 30 },\n  { name: 'Category B', value: 20 },\n  { name: 'Category C', value: 50 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28'];\n\nconst Starter = () => {\n  const [courses, setCourses] = useState([]);\n  const [request, setRequest] = useState([]);\n  const [internships, setInternships] = useState([]);\n  const [events, setEvents] = useState([]);\n  // const [earning,setEarning] = useState(0);\n  const [users, setUsers] = useState([]);\n\n  // Login Count Data for line chart\n  const [loginData, setLoginData] = useState([]);\n\n  // Sign up count data for line chart\n  const [signUpData, setSignUpData] = useState([]);\n\n  // propety data for bar chart\n  const [propertyData, setPropertyData] = useState([]);\n\n  // total property data for pie chart\n  const [totalPropertyData, setTotalPropertyData] = useState([])\n\n  // revenue data for line chart\n  const [revenueData, setRevenueData] = useState([]);\n\n  // revenue pla data for pie chart\n  const [revenuePlan, setRevenuePlan] = useState([]);\n\n  let loginStartDate = \"\";\n  let loginEndDate = \"\";\n  let propertyStartDate = \"\";\n  let propertyEndDate = \"\";\n  let revenueStartDate = \"\";\n  let revenueEndDate = \"\";\n\n  const handleLoginDateChange = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    loginStartDate = `${year}-${month}-${day}`;\n  };\n\n  const handleLoginEndDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    loginEndDate = `${year}-${month}-${day}`;\n  }\n\n  const handlePropStartDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    propertyStartDate = `${year}-${month}-${day}`;\n  }\n\n  const handlePropEndDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    propertyEndDate = `${year}-${month}-${day}`;\n  }\n\n  const handleRevenueStartDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    revenueStartDate = `${year}-${month}-${day}`;\n  }\n\n  const handleRevenueEndDate = (date) => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    revenueEndDate = `${year}-${month}-${day}`;\n  }\n\n  const loginHandle = async () => {\n    try {\n      const res = await axios.get(`/user/stats?startDate=${loginStartDate}&endDate=${loginEndDate}`)\n      const data = res.data;\n\n      let arr = [];\n\n      for (let i = 0; i < data.loginDate.length; i++) {\n        arr.push({ date: data.loginDate[i], users: data.loginCount[i] });\n      }\n      setLoginData(arr);\n      let arr2 = [];\n\n      for (let i = 0; i < data.signUpDate.length; i++) {\n        arr2.push({ date: data.signUpDate[i], users: data.signUpCount[i] });\n      }\n\n      setSignUpData(arr2);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const propertyHandle = async () => {\n    try {\n      const res3 = await axios.get(`/property/counts?startDate=${propertyStartDate}&endDate=${propertyEndDate}`)\n      const data3 = res3.data;\n      setPropertyData(data3.propertyByDate);\n      let propCntArr = [];\n      propCntArr.push({ name: \"Live Properties\", value: data3.totalLiveProperties })\n      propCntArr.push({ name: \"Live PGs\", value: data3.totalLivePGs })\n      propCntArr.push({ name: \"Live Sharing Flats\", value: data3.totalLiveSharingFlats })\n      propCntArr.push({ name: \"Live Private Flats\", value: data3.totalLivePrivateFlats })\n      setTotalPropertyData(propCntArr);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const revenueHandle = async () => {\n    try {\n      const res4 = await axios.get(`/api/v1/paymentGateway/revenue?startDate=${revenueStartDate}&endDate=${revenueEndDate}`)\n      const data4 = res4.data;\n      setRevenueData(data4.revenueByDate);\n      let revenuePlanData = [];\n      revenuePlanData.push({ name: \"Basic Plan\", value: data4.revenueByPlan.Basic })\n      revenuePlanData.push({ name: \"King Plan\", value: data4.revenueByPlan.King })\n      revenuePlanData.push({ name: \"Pro Plan\", value: data4.revenueByPlan.Pro })\n      setRevenuePlan(revenuePlanData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  // User Date\n  const [userData, setUserData] = useState({\n    \"bannedUserCount\": 0,\n    \"pendingCallbackCount\": 0,\n    \"reportedPropertiesCount\": 0,\n    \"rentedOutPropertiesCount\": 0,\n    \"unverifiedPropertiesCount\": 0\n  })\n\n  useEffect(() => {\n    const fetchData = async () => {\n\n      fetch(\"https://api-cnn5jio2q-chiragbhanderi1.vercel.app/getcourses\")\n        .then((res) => res.json())\n        .then((data) => {\n          setCourses(data)\n        })\n        .catch((err) => console.log(err));\n      fetch(\"https://api-cnn5jio2q-chiragbhanderi1.vercel.app/getrequests\")\n        .then((res) => res.json())\n        .then((data) => {\n          setRequest(data)\n        })\n        .catch((err) => console.log(err));\n\n      fetch(\"https://api-cnn5jio2q-chiragbhanderi1.vercel.app/getinternships\")\n        .then((res) => res.json())\n        .then((data) => { setInternships(data) })\n        .catch((err) => console.log(err));\n\n      fetch(\"https://api-cnn5jio2q-chiragbhanderi1.vercel.app/getevents\")\n        .then((res) => res.json())\n        .then((data) => setEvents(data))\n        .catch((err) => console.log(err));\n\n      fetch(\"https://api-cnn5jio2q-chiragbhanderi1.vercel.app/getusers\")\n        .then((res) => res.json())\n        .then((data) => { setUsers(data) })\n        .catch((err) => console.log(err));\n\n      try {\n        const res = await axios.get(\"http://15.206.66.176:8080/user/stats\");\n        const data = res.data;\n\n        let arr = [];\n\n        for (let i = 0; i < data.loginDate.length; i++) {\n          arr.push({ date: data.loginDate[i], users: data.loginCount[i] });\n        }\n        setLoginData(arr);\n\n        let arr2 = [];\n\n        for (let i = 0; i < data.signUpDate.length; i++) {\n          arr2.push({ date: data.signUpDate[i], users: data.signUpCount[i] });\n        }\n\n        setSignUpData(arr2);\n\n        const res2 = await axios.get(\"http://15.206.66.176:8080/user/numbers\");\n        const data2 = res2.data;\n        setUserData(data2);\n\n        const res3 = await axios.get(\"http://15.206.66.176:8080/property/counts\");\n        const data3 = res3.data;\n        setPropertyData(data3.propertyByDate);\n        let propCntArr = [];\n        propCntArr.push({ name: \"Live Properties\", value: data3.totalLiveProperties })\n        propCntArr.push({ name: \"Live PGs\", value: data3.totalLivePGs })\n        propCntArr.push({ name: \"Live Sharing Flats\", value: data3.totalLiveSharingFlats })\n        propCntArr.push({ name: \"Live Private Flats\", value: data3.totalLivePrivateFlats })\n        setTotalPropertyData(propCntArr);\n\n        const res4 = await axios.get(\"http://15.206.66.176:8080/api/v1/paymentGateway/revenue\")\n        const data4 = res4.data;\n        setRevenueData(data4.revenueByDate);\n        let revenuePlanData = [];\n        revenuePlanData.push({ name: \"Basic Plan\", value: data4.revenueByPlan.Basic })\n        revenuePlanData.push({ name: \"King Plan\", value: data4.revenueByPlan.King })\n        revenuePlanData.push({ name: \"Pro Plan\", value: data4.revenueByPlan.Pro })\n        setRevenuePlan(revenuePlanData);\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchData();\n  }, [])\n  return (\n    <div>\n      <Row className=\"text-center\">\n        <Col sm=\"4\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-success text-success\"\n            title=\"Courses\"\n            subtitle=\"Banned Users\"\n            earning={userData.bannedUserCount}\n            icon=\"bi bi-book\"\n          />\n        </Col>\n        <Col sm=\"4\" lg=\"2\">\n          <TopCards\n            bg=\"bg-light-danger text-danger\"\n            title=\"Internships\"\n            subtitle=\"Pending Callbacks\"\n            earning={userData.pendingCallbackCount}\n            icon=\"bi bi-bullseye\"\n          />\n        </Col>\n        <Col sm=\"4\" lg=\"2\">\n          <TopCards\n            bg=\"bg-light-warning text-warning\"\n            title=\"Events\"\n            subtitle=\"Reported Properties\"\n            earning={userData.reportedPropertiesCount}\n            icon=\"bi bi-calendar-event\"\n          />\n        </Col>\n        <Col sm=\"4\" lg=\"2\">\n          <TopCards\n            bg=\"bg-light-info text-into\"\n            title=\"Users\"\n            subtitle=\"Rented Properties\"\n            earning={userData.rentedOutPropertiesCount}\n            icon=\"bi bi-people\"\n          />\n        </Col>\n        <Col sm=\"6\" lg=\"3\">\n          <TopCards\n            bg=\"bg-light-info text-into\"\n            title=\"Users\"\n            subtitle=\"Unverified Properties\"\n            earning={userData.unverifiedPropertiesCount}\n            icon=\"bi bi-people\"\n          />\n        </Col>\n      </Row>\n\n\n      {/* Login And Signup charts  */}\n      <Row>\n        {/* Login Chart  */}\n        <Col>\n          Login Chart :\n          <LineChart width={700} height={400} data={loginData}>\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"users\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n          </LineChart>\n        </Col>\n        <Col>\n          <h4>Select Start Date</h4>\n          <DatePicker\n            selected={loginStartDate}\n            onChange={handleLoginDateChange}\n            dateFormat=\"yyyy-MM-dd\" // You can customize the date format\n            isClearable // Add a clear button\n            showYearDropdown // Show year dropdown\n            scrollableYearDropdown // Make year dropdown scrollable\n          />\n\n          <br />\n          <br />\n          <br />\n\n          <h4>Select End Date</h4>\n          <DatePicker\n            selected={loginEndDate}\n            onChange={handleLoginEndDate}\n            dateFormat=\"yyyy-MM-dd\" // You can customize the date format\n            isClearable // Add a clear button\n            showYearDropdown // Show year dropdown\n            scrollableYearDropdown // Make year dropdown scrollable\n          />\n\n          <br />\n          <br />\n\n          <button onClick={loginHandle}>Fetch Chart Data</button>\n        </Col>\n\n        {/* Sign up Chart  */}\n        <Col>\n          Sign Up Chart :\n          <LineChart width={700} height={400} data={signUpData}>\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"users\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n          </LineChart>\n        </Col>\n      </Row>\n\n      {/* Properties And Revenue Charts */}\n      <Row>\n\n        {/* Properties Bar Chart  */}\n        <Col>\n          Properties Chart :\n          <BarChart width={700} height={400} data={propertyData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"pg\" fill=\"#8884d8\" />\n            <Bar dataKey=\"sharingflat\" fill=\"#00DDFF\" />\n            <Bar dataKey=\"privateflat\" fill=\"#36B400\" />\n          </BarChart>\n        </Col>\n\n        <Col>\n          <h4>Select Start Date</h4>\n          <DatePicker\n            selected={propertyStartDate}\n            onChange={handlePropStartDate}\n            dateFormat=\"yyyy-MM-dd\" // You can customize the date format\n            isClearable // Add a clear button\n            showYearDropdown // Show year dropdown\n            scrollableYearDropdown // Make year dropdown scrollable\n          />\n\n          <br />\n          <br />\n          <br />\n\n          <h4>Select End Date</h4>\n          <DatePicker\n            selected={propertyEndDate}\n            onChange={handlePropEndDate}\n            dateFormat=\"yyyy-MM-dd\" // You can customize the date format\n            isClearable // Add a clear button\n            showYearDropdown // Show year dropdown\n            scrollableYearDropdown // Make year dropdown scrollable\n          />\n\n          <br />\n          <br />\n\n          <button onClick={propertyHandle}>Fetch Chart Data</button>\n        </Col>\n\n        {/* Revenue Line Chart */}\n        <Col>\n          Revenue chart\n          <LineChart width={700} height={400} data={revenueData}>\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n          </LineChart>\n        </Col>\n\n        <Col>\n          <h4>Select Start Date</h4>\n          <DatePicker\n            selected={revenueStartDate}\n            onChange={handleRevenueStartDate}\n            dateFormat=\"yyyy-MM-dd\" // You can customize the date format\n            isClearable // Add a clear button\n            showYearDropdown // Show year dropdown\n            scrollableYearDropdown // Make year dropdown scrollable\n          />\n\n          <br />\n          <br />\n          <br />\n\n          <h4>Select End Date</h4>\n          <DatePicker\n            selected={revenueEndDate}\n            onChange={handleRevenueEndDate}\n            dateFormat=\"yyyy-MM-dd\" // You can customize the date format\n            isClearable // Add a clear button\n            showYearDropdown // Show year dropdown\n            scrollableYearDropdown // Make year dropdown scrollable\n          />\n\n          <br />\n          <br />\n\n          <button onClick={revenueHandle}>Fetch Chart Data</button>\n        </Col>\n\n      </Row>\n\n      {/* Revenue And Properties Pie charts  */}\n      <Row>\n\n\n        {/* Revenue Plan Pie Chart */}\n        <Col>\n          <PieChart width={400} height={300}>\n            <Pie\n              dataKey=\"value\"\n              isAnimationActive={false}\n              data={revenuePlan}\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius={80}\n              fill=\"#8884d8\"\n              label\n            >\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n          </PieChart>\n        </Col>\n\n        {/* Properties Pie Chart */}\n        <Col>\n          <PieChart width={400} height={300}>\n            <Pie\n              dataKey=\"value\"\n              isAnimationActive={false}\n              data={totalPropertyData}\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius={80}\n              fill=\"#8884d8\"\n              label\n            >\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n              ))}\n            </Pie>\n            <Tooltip />\n            <Legend />\n          </PieChart>\n        </Col>\n      </Row>\n\n\n      {/* <Row>\n        <Col lg=\"12\">\n          <Card>\n            <CardBody>\n              <Link to={\"/requests\"} className=\"text-dark\" style={{ textDecoration: \"none\" }}>\n                <CardTitle tag=\"h5\">Payment Requests <i className=\"bi bi-box-arrow-up-right fs-6 ms-2\"></i></CardTitle>\n                <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n                  Offline Payment Requests\n                </CardSubtitle>\n              </Link>\n              <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\n                <thead>\n                  <tr>\n                    <th>Sno</th>\n                    <th>Email</th>\n                    <th>Course</th>\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {request.map((tdata, index) => index < 3 && (\n                    <tr key={index} className=\"border-top\">\n                      <td>{index + 1}</td>\n                      <td>{tdata.email}</td>\n                      <td>{tdata.courseId}</td>\n                      <td>{tdata.status} </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\n          <SalesChart events={events} internships={internships} courses={courses} />\n        </Col>\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"4\">\n          <Feeds users={users} />\n        </Col>\n      </Row> */}\n      {/***Table ***/}\n      {/* <Row>\n        <Col lg=\"12\">\n          <ProjectTables courses={courses} />\n        </Col>\n      </Row> */}\n      {/***Blog Cards***/}\n\n      {/* <Row className=\"bg-white p-1 m-1\">\n        <h5 className=\"mt-1 mb-1\">Events</h5>\n        <h6 className=\"text-muted mb-4\">Some Events</h6>\n        {events.map((blg, index) => index < 4 && (\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\n            <Blog\n              image={blg.img}\n              title={blg.title}\n              subtitle={blg.subtitle}\n              color=\"dark\"\n              editbutton=\"true\"\n              delbutton=\"true\"\n              morebutton=\"true\"\n            />\n          </Col>\n        ))}\n      </Row> */}\n    </div>\n\n  );\n};\n\nexport default Starter;\n"],"sourceRoot":""}