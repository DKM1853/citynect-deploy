{"version":3,"sources":["views/ui/Signup.js"],"names":["Signup","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","password","setPassword","_useState5","_useState6","superpassword","setSuperpassword","_useState7","_useState8","error","setError","_useState9","_useState10","contact","setContact","_useState11","_useState12","showModal","setShowModal","_jsxs","className","children","Modal","isOpen","_jsx","ModalHeader","ModalBody","Form","onSubmit","e","preventDefault","FormGroup","Label","for","Input","type","id","required","value","onChange","target","Button","Row","Col","Card","CardTitle","tag","CardBody","data","number","fetch","method","headers","body","JSON","stringify","then","res","status","alert","catch","err","placeholder","style","paddingLeft","paddingRight","width"],"mappings":"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","file":"static/js/9.d8f4f24a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Card,\n  Row,\n  Col,\n  CardTitle,\n  CardBody,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n\nconst Signup = () => {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [superpassword, setSuperpassword] = useState('');\n  const [error, setError] = useState('');\n  const [contact, setContact] = useState('');\n  const [showModal, setShowModal] = useState(true);\n\n  const handleModalSubmit = (e) => {\n    e.preventDefault();\n    if (superpassword === \"admin\") {\n      setShowModal(false);\n    } else {\n      setError(\"Invalid Password\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Create a data object to send in the request body\n    const data = {\n      name: name,\n      number: contact,\n      password: password,\n    };\n\n    fetch(\"http://15.206.66.176:8080/admin/add-admin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data), // Convert the data object to JSON\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          alert(\"New Admin Added!\");\n          // Clear the form fields\n          setName('');\n          setPassword('');\n          setContact('');\n        } else {\n          alert(\"Check Credentials Or Internal Error\");\n        }\n      })\n      .catch((err) => alert(err));\n  };\n\n  return (\n    <div className='bg-white'>\n      <Modal isOpen={showModal}>\n        <ModalHeader>Password Verification</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleModalSubmit}>\n            <FormGroup>\n              <Label for=\"superpassword\">Password:</Label>\n              <Input\n                type=\"password\"\n                id=\"superpassword\"\n                required\n                value={superpassword}\n                onChange={(e) => setSuperpassword(e.target.value)}\n              />\n            </FormGroup>\n            {error && <p className='text-danger'>{error}</p>}\n            <Button type=\"submit\">Continue</Button>\n          </Form>\n        </ModalBody>\n      </Modal>\n      <Row>\n        <Col>\n          <Card>\n            <CardTitle tag=\"h4\" className=\"text-center border-bottom p-3 mb-0\">\n              <i className=\"bi bi-person-fill-lock me-2\"></i>\n              Admins\n            </CardTitle>\n            <CardTitle tag=\"h6\" className=\" p-3 mb-0\">\n              <i className=\"bi bi-person-fill-lock me-2\"></i>\n              Add Admin\n            </CardTitle>\n            <CardBody>\n              <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                  <Label for=\"name\">Name</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"name\"\n                    className=\"form-control form-control-lg\"\n                    required\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    placeholder=\"Enter a valid Admin Name\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"contact\">Contact</Label>\n                  <Input\n                    type=\"number\"\n                    id=\"contact\"\n                    className=\"form-control form-control-lg\"\n                    required\n                    value={contact}\n                    onChange={(e) => setContact(e.target.value)}\n                    placeholder=\"Enter Contact Number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"password\">Password</Label>\n                  <Input\n                    type=\"password\"\n                    id=\"password\"\n                    className=\"form-control form-control-lg\"\n                    required\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Enter password\"\n                  />\n                </FormGroup>\n                <Button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-lg\"\n                  style={{ paddingLeft: \"2.5rem\", paddingRight: \"2.5rem\", width: \"100%\" }}\n                >\n                  Add Admin\n                </Button>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Signup;"],"sourceRoot":""}